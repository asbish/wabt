;;; TOOL: run-interp
;;; ARGS: --trace
(module
  (func $fib (param $n i32) (result i32)
    get_local $n
    i32.const 1
    i32.le_s
    if (result i32)
      i32.const 1
    else
      get_local $n
      i32.const 1
      i32.sub
      call $fib
      get_local $n
      i32.mul
    end)

  (func (export "main") (result i32)
    i32.const 3
    call $fib))
(;; STDOUT ;;;
>>> running export "main"
#0.   72: V:0  | i32.const 3
#0.   78: V:1  | call $0
#1.    0: V:1  | local.get $1
#1.    6: V:2  | i32.const 1
#1.   12: V:3  | i32.le_s 3, 1
#1.   14: V:2  | br_unless @32, 0
#1.   32: V:1  | local.get $1
#1.   38: V:2  | i32.const 1
#1.   44: V:3  | i32.sub 3, 1
#1.   46: V:2  | call $0
#2.    0: V:2  | local.get $1
#2.    6: V:3  | i32.const 1
#2.   12: V:4  | i32.le_s 2, 1
#2.   14: V:3  | br_unless @32, 0
#2.   32: V:2  | local.get $1
#2.   38: V:3  | i32.const 1
#2.   44: V:4  | i32.sub 2, 1
#2.   46: V:3  | call $0
#3.    0: V:3  | local.get $1
#3.    6: V:4  | i32.const 1
#3.   12: V:5  | i32.le_s 1, 1
#3.   14: V:4  | br_unless @32, 1
#3.   20: V:3  | i32.const 1
#3.   26: V:4  | br @60
#3.   60: V:4  | drop_keep $1 $1
#3.   70: V:3  | return
#2.   52: V:3  | local.get $2
#2.   58: V:4  | i32.mul 1, 2
#2.   60: V:3  | drop_keep $1 $1
#2.   70: V:2  | return
#1.   52: V:2  | local.get $2
#1.   58: V:3  | i32.mul 2, 3
#1.   60: V:2  | drop_keep $1 $1
#1.   70: V:1  | return
#0.   84: V:1  | return
main() => i32:6
;;; STDOUT ;;)
